type Query {
  station(id: ID!): Station
  stationByGroupId(groupId: ID!): Station
  stationByCoords(latitude: Float!, longitude: Float!): Station
    @deprecated(reason: "Use `nearbyStations`.")
  nearbyStations(latitude: Float!, longitude: Float!, limit: Int = 1): [Station]
  stationsByLineId(lineId: ID!): [Station]
  stationsByName(name: String!): [Station]
  allStations: [StationOnly]
  random: Station
}

enum StopCondition {
  ALL
  NOT
  PARTIAL
  WEEKDAY
  HOLIDAY
}

type Station {
  id: Int
  address: String
  distance: Float
  latitude: Float
  longitude: Float
  lines: [Line]
  currentLine: Line
  openYmd: String
  postalCode: String
  prefId: Int
  groupId: Int
  name: String
  nameK: String
  nameR: String
  nameZh: String
  nameKo: String
  trainTypes: [TrainType]
  pass: Boolean
  stopCondition: StopCondition
  stationNumber: String
  fullStationNumber: String
  secondaryStationNumber: String
  secondaryFullStationNumber: String
  extraStationNumber: String
  extraFullStationNumber: String
}

type StationOnly {
  id: Int
  address: String
  distance: Float
  latitude: Float
  longitude: Float
  openYmd: String
  postalCode: String
  prefId: Int
  groupId: Int
  name: String
  nameK: String
  nameR: String
  nameZh: String
  nameKo: String
}
